module atlaas {
    codels_requires:    libimages3d, t3d, atlaas;
    requires:           genBasic, genPos, "velodyne >= 1.2";
    internal_data:      atlaas_t;   /* C typedef (defined below) */
    lang:               "c++";      /* atlaas is C++11 */
    number:             1337;       /* module id: unique number */
    version:            "0.1";
};

import from genBasic {
#include "genBasicStruct.h"
};

import from genPos {
#include "genPosStruct.h"
};

import from velodyne {
#include "velodyneClient.h"
};

#include "atlaas_struct.h"

typedef struct atlaas_t {
    /** params */
    geodata meta;
    /** actual data */
    DTM_P3D_POSTER p3d_poster;
} atlaas_t;

/* Initializes the internal ATLAAS */
request Init {
    doc:            "Initialize and connect to Velodyne";
    type:           init;
    input:          meta::meta;
    exec_task:      ExecTask;
    c_exec_func:    atlaas_init_exec;
    fail_msg:
        POSTER_NOT_FOUND;
    incompatible_with:  all;
};

request Fuse {
    doc:            "Fuses a point-cloud in the atlaas";
    type:           exec;
    posters_input:  velodyne3DImage;
    exec_task:      ExecTask;
    c_exec_func:    atlaas_fuse_exec;
    fail_msg:
        POSTER_NOT_FOUND,
        IM3D_INIT,
        TRANSFORMATION_ERROR;
    incompatible_with:  all;
};

request Save {
    doc:            "Save the ATLAAS as GeoTiff";
    type:           exec;
    exec_task:      ExecTask;
    c_exec_func:    atlaas_save_exec;
    fail_msg:
        WRITE_ERROR;
    incompatible_with:  all;
};



poster P3dPoster {
    update:     user;
    type:       p3d_poster::DTM_P3D_POSTER;
    exec_task:  ExecTask;
};


exec_task ExecTask {
    priority:       200;
    stack_size:     20000; /* TODO */
    c_init_func:    atlaas_exec_task_init;
    c_end_func:     atlaas_exec_task_end;
    fail_msg:       ATLAAS_TASK_ERROR;
};
